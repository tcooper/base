<?xml version="1.0" standalone="no"?>

<kickstart>

<description>
Configure a node's network
</description>


<copyright>
Copyright (c) 2000 - 2007 The Regents of the University of California.
All rights reserved. Rocks(tm) v4.3 www.rocksclusters.org
</copyright>


<changelog>
$Log: networking-client.xml,v $
Revision 1.9  2010/05/20 20:59:10  bruno
pulled my head of out of my keister and figured out how to pass parameters
to 'rocks config host interface'

Revision 1.8  2010/05/20 00:31:44  bruno
gonna get some serious 'star power' off this commit.

put in code to dynamically configure the static-routes file based on
networks (no longer the hardcoded 'eth0').

Revision 1.7  2009/03/31 00:23:29  anoop
Merged the remainder of the solaris XML files to the base roll

Revision 1.6  2009/03/06 22:45:21  bruno
use attributes

Revision 1.5  2009/01/23 23:19:31  mjk
tweaks on the entities

Revision 1.4  2008/09/22 20:20:42  bruno
change 'rocks config host interface|network' to
change 'rocks report host interface|network'

Revision 1.3  2008/07/23 00:01:06  bruno
tweaks

Revision 1.2  2007/12/11 17:41:35  bruno
make sure the output of ConfigNetworks is parse by the graph processing
program and not output as literal XML.

Revision 1.1  2007/12/10 21:28:33  bruno
the base roll now contains several elements from the HPC roll, thus
making the HPC roll optional.

this also includes changes to help build and configure VMs for V.

</changelog>


<post os='linux'>

<eval shell="/opt/rocks/bin/python">
import os
import re

ifaces = []
macs = []
modules = []
flags = []

for i in os.environ:
	if re.match('HTTP_X_RHN_PROVISIONING_MAC_[0-9]+', i):
		devinfo = os.environ[i].split()
		iface = devinfo[0]
		macaddr = devinfo[1].lower()
		module = ''
		if len(devinfo) > 2:
			module = devinfo[2]

		ks = ''
		if len(devinfo) > 3:
			ks = 'ks'

		ifaces.append(iface)
		macs.append(macaddr)
		modules.append(module)
		flags.append(ks)

os.system('/opt/rocks/bin/rocks config host interface &hostname; iface="%s" \
	mac="%s" module="%s" flag="%s"' % (','.join(ifaces), ','.join(macs), \
	','.join(modules), ','.join(flags)))
</eval>

</post>


<post>

<eval mode="xml">
/opt/rocks/bin/rocks report host network &hostname;
</eval>

<eval mode="xml">
/opt/rocks/bin/rocks report host interface &hostname;
</eval>

</post>

<post cond="rocks_version_major &gt; 6">
/usr/bin/systemctl disable NetworkManager.service
</post>


</kickstart> 
