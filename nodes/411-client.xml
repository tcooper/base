<?xml version="1.0" standalone="no"?>

<kickstart>

  <description>

  Sets up the 411 Secure Information Service for clients.  The
  411 service will automatically configure itself when a file 
  is published.

  Also puts all current 411 files from the frontend into the 
  kickstart file for services that cannot tolerate a single
  411 failure.

  Note that 411 can never guarentee full absolute success at any
  single time. It only offers consistancy over the long term.

  </description>

  <changelog>
  $Log: 411-client.xml,v $
  Revision 1.19  2012/12/18 16:57:24  clem
  a improvement to the 411-client to get the private key

  Based on the sugestion of Bjorn-Helge Mevik now we enter an infinite loop
  till we dont get the private key.

  Revision 1.18  2012/08/04 06:34:28  phil
  Have nodes ask to have their secure attributes set as well as the 411 shared
  key.

  Revision 1.17  2011/12/20 19:17:06  phil
  proper bash or syntax. Bug report from Rick Wagner

  Revision 1.16  2011/08/26 06:11:19  anoop
  It's not possible to do get-411-key using sysidconfig configure
  script, as ssh is not running at the time. So instead, we start
  it as an SMF service after SSH has started.

  Revision 1.15  2011/08/24 05:57:23  anoop
  Use get-411-key to obtain shared key from frontend on Solaris

  Revision 1.14  2011/08/04 23:14:29  phil
  Need to wait longer for the shared key to show up in the file system on
  VMs. Timing Race.

  Revision 1.13  2011/06/17 23:14:45  phil
  Restart autofs. Needed because we don't transfer /etc/auto.master in the kickstart file.

  Revision 1.12  2011/04/21 00:21:29  phil
  Close eval tag.
  XML entities cannot begin with a numeric digit. Who woulda thunk that.

  Revision 1.11  2011/04/14 23:26:30  anoop
  411 shared key is no longer transferred through kickstart.
  It is transferred through "rocks sync host sharedkey"
  411 configuration is now generated through "rocks report host config411"
  411 files are not transferred during kickstart. They are now transferred
  at first boot.

  Revision 1.10  2010/11/17 01:24:25  anoop
  Solaris Compatibility fixes for 411 channeld

  Revision 1.9  2010/10/20 23:41:04  mjk
  forgot to make this into a service
  needs a solaris version as well

  Revision 1.8  2009/05/19 21:57:17  anoop
  Use the "interpreter" attribute instead of arg="--interpreter"

  Revision 1.7  2009/05/19 20:09:26  bruno
  only need to indicate 'interpreter' once

  Revision 1.6  2009/03/30 19:29:50  anoop
  Merging xml files from Solaris Roll to the Linux roll.
  More files to follow

  Revision 1.5  2009/01/23 23:19:31  mjk
  tweaks on the entities

  Revision 1.4  2009/01/23 21:50:23  bruno
  var tags converted to entities

  Revision 1.3  2007/12/10 21:28:33  bruno
  the base roll now contains several elements from the HPC roll, thus
  making the HPC roll optional.

  this also includes changes to help build and configure VMs for V.

  Revision 1.3  2006/01/16 06:49:09  mjk
  fix python path for source built foundation python

  Revision 1.2  2005/09/23 21:41:51  bruno
  make sure the python code that is run in the post section and that
  imports rocks python code, uses the rocks foundation.

  Revision 1.1  2005/03/01 17:34:02  mjk
  move 411 to hpc roll

  Revision 1.1  2005/03/01 00:22:25  mjk
  moved to base roll

  Revision 1.10  2005/02/15 22:58:52  mjk
  dtd is gone

  Revision 1.9  2005/02/12 02:27:55  fds
  411 second generation: safer, thanks to master-only RSA keypair; all files
  are now signed for integrity. Faster for master, since we run the random
  number generator less (only once per cluster lifetime rather than once per
  encryption).  Keys are kept in /etc/411-security. Amen.

  Revision 1.8  2004/08/10 19:05:42  fds
  Moved to new security graph hierarchy.

  Revision 1.7  2004/07/21 21:49:25  fds
  Add Membership name as a default 411 group.

  Revision 1.6  2004/04/30 20:35:45  fds
  No blocking for 411 files at startup

  Revision 1.5  2004/04/13 20:08:34  fds
  Encrypted (not plain) 411 files in kickstart file. Decoded on compute
  nodes locally. Turned off 411-Login-Files service.  Why not have initial
  411 pull on appliance startup?
  1. More http load on frontend, which often is already heavily loaded with
  many installs.
  2. Slows down boot time on computes.
  3. If process fails, due to network partition or otherwise, important
  components are not configured on first boot (sge).

  Revision 1.4  2004/04/06 23:43:32  mjk
  turn initial 411 pull back on

  Revision 1.3  2004/03/30 03:57:00  fds
  Dont go to the local apache server for the 411 file contents, by calling
  the raw decrypt() of 411. Saves httpd accesses, and prevents memory leaks.
  Especially useful for heavy reinstall activity.

  Revision 1.2  2004/03/29 23:42:36  fds
  Putting all current 411 files into compute node's kickstart file.

  Revision 1.1  2004/03/08 21:01:23  mjk
  *** empty log message ***

  Revision 1.9  2004/02/03 20:00:35  mjk
  decolorize

  Revision 1.8  2004/01/30 04:53:42  mjk
  colorize

  Revision 1.7  2003/11/05 23:46:25  fds
  Added 411-Login-Files service (waits for /etc/passwd, etc)

  Revision 1.6  2003/10/30 02:34:40  fds
  adjusted paths

  Revision 1.5  2003/10/23 22:13:27  fds
  Will improve convergence behavior of 411.

  Revision 1.4  2003/08/14 17:56:01  fds
  Using the setuid read-private-key utility.

  Revision 1.3  2003/08/14 15:32:23  mjk
  - Built Python2 for Itanic
  - Root part is now 4GB
  - Include openssl python tools for 411 on Itanic

  Revision 1.2  2003/08/06 00:01:40  fds
  Added 411 bootstrap service.

  Revision 1.1  2003/07/24 19:14:10  fds
  First design

  </changelog>

<package os="linux">rocks-sec-channel-client</package>
<package os="linux">rocks-411-alert</package>
<package os="sunos">ROCKSrocks-sec-channel-client</package>


<post os="sunos">
cp /opt/rocks/share/channeld/channeld.xml /var/svc/manifest/network/channeld.xml
<service name='network/channeld' enabled='yes'/>
</post>

<post>
mkdir -p /etc/411-security

<file name="/etc/411-security/master.pub" owner="root:root" perms="0444">
<eval shell="sh">
cat /etc/411-security/master.pub
</eval>
</file>

<!-- Although the 411 service can spring to life autonomously, it 
requires an alert to do so. We set the config file explicitly so we
do not have to resend alerts for every new node in the cluster. -->
<eval mode="xml">
/opt/rocks/bin/rocks report host config411 &hostname;
</eval>
</post>

<post os="linux">
<file name="/etc/rc.d/rocksconfig.d/post-02-411get" perms="0700">
#!/bin/bash

while [ ! -f /etc/411-security/shared.key ]; do

	# Tell frontend to send you the 411 shared key
	/opt/rocks/bin/get-411-key &Kickstart_PrivateAddress;

	# Wait 10 seconds for shared key to get populated
	for i in 1 2 3 4 5 6 7 8 9 10 11 12; do 
		[ ! -f /etc/411-security/shared.key ] &amp;&amp; sleep 10 
	done
done

# If shared key got transferred, do a 411get and pull information
# from frontend

[ -f /etc/411-security/shared.key ] &amp;&amp; /opt/rocks/bin/411get --all

if [ -f /etc/rc3.d/S*autofs -o -f /etc/rc5.d/S*autofs ]; then
	/sbin/service autofs restart
fi
	
# Tell frontend to set your secure attributes  
/opt/rocks/bin/rqst-sec-attrs &Kickstart_PrivateAddress;

rm -rf /etc/rc.d/rocksconfig.d/post-02-411get
</file>
</post>

<post os="sunos">
<file name="/lib/svc/method/sync_411_key" perms="0755" owner="root:bin">
#!/sbin/sh

. /lib/svc/share/smf_include.sh
. /lib/svc/share/fs_include.sh

# If the sharedkey exists, exit
[ -f /etc/411-security/shared.key ] &amp;&amp; exit $SMF_EXIT_OK

mkdir -p /etc/411-security

# Tell frontend to send you the 411 shared key
/opt/rocks/bin/get-411-key &Kickstart_PrivateAddress;

# Wait 10 seconds for shared key to get populated
for i in 1 2 3 4 5 6 7 8 9 10; do 
	[ ! -f /etc/411-security/shared.key ] &amp;&amp; sleep 1
done

# If shared key got transferred,
# do a 411get and pull information
# from frontend
[ -f /etc/411-security/shared.key ] || exit $SMF_EXIT_ERR_CONFIG
/opt/rocks/bin/411get --all

# Tell frontend to set your secure attributes  
/opt/rocks/bin/rqst-sec-attrs &Kickstart_PrivateAddress;

exit $SMF_EXIT_OK
</file>

<file name="/opt/rocks/share/sync-411-key.xml" perms="0644" owner=""><![CDATA[
<?xml version="1.0"?>
<!DOCTYPE service_bundle SYSTEM "/usr/share/lib/xml/dtd/service_bundle.dtd.1">
<service_bundle type='manifest' name='ROCKSsvc:sync-411-key'>
<service
	name='system/sync-411-key'
	type='service'
	version='1'>

	<create_default_instance enabled='true' />

	<single_instance/>

	<dependency name='ssh' grouping='require_all'
		restart_on='none' type='service'>
		<service_fmri value='svc:/network/ssh' />
	</dependency>
	<exec_method
		type='method'
		name='start'
		exec='/lib/svc/method/sync_411_key'
		timeout_seconds='60' />

	<exec_method
		type='method'
		name='stop'
		exec=':true'
		timeout_seconds='3' />

	<property_group name='startd' type='framework'>
		<propval name='duration' type='astring' value='transient' />
	</property_group>

	<stability value='Unstable' />

	<template>
		<common_name>
			<loctext xml:lang='C'>
				Synchronize the 411 shared key
			</loctext>
		</common_name>
		<description>
			<loctext xml:lang='C'>
				This service requests the 411 shared key
				from the frontend, which then synchronizes
				the key using ssh.
			</loctext>
		</description>
	</template>
</service>
</service_bundle>
]]>
</file>
cp -rf /opt/rocks/share/sync-411-key.xml \
	/var/svc/manifest/system/sync-411-key.xml
<service name="system/sync-411-key" enabled='yes'/>

</post>

<!-- turn services on -->
<post cond="rocks_version_major == 6">
/sbin/chkconfig channeld on
</post>

<post cond="rocks_version_major == 7">
/usr/bin/systemctl enable rpcbind
/usr/bin/systemctl enable channeld
</post>
</kickstart>
